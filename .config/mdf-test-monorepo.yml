steps:
- task: Yarn@3
  displayName: 'Install node_modules with devDependencies'
  inputs:
    projectDirectory: '.'
    arguments: 'install'

- task: SnykSecurityScan@1
  displayName: 'Execute snyk test for security vulnerabilities'
  inputs:
    serviceConnectionEndpoint: 'Snyk Security Scan-MytraManagementSystem'
    testType: 'app'
    monitorWhen: 'always'
    failOnIssues: true
    projectName: '@mdf.js'
    organization: 'faeff5f2-2ffb-4c50-9cb3-5c216ff5b6e5'
    additionalArguments: '--yarn-workspaces --strict-out-of-sync=false --json-file-output=report.json'

- task: Yarn@3
  displayName: 'Generate snyk report'
  inputs:
    projectDirectory: '.'
    arguments: 'run @:snyk:report'
  continueOnError: true
  
# - task: Yarn@3
#   displayName: 'Execute snyk test for security vulnerabilities'
#   inputs:
#     projectDirectory: '.'
#     arguments: 'run @:snyk'
#   continueOnError: false
#   env:
#     SNYK_TOKEN: $(SECRET_SNYK_TOKEN)
#     SNYK_CFG_ORG: $(SECRET_SNYK_CFG_ORG)

- task: Yarn@3
  displayName: 'Execute compilation, unit test and mutants'
  inputs:
    projectDirectory: '.'
    arguments: 'run test'
  continueOnError: false

- task: PublishTestResults@2
  displayName: 'Publishing test result to Azure DevOps'
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: |
      coverage/**/test-results.xml
    failTaskOnFailedTests: true
    mergeTestResults: true
    publishRunAttachments: false

- task: reportgenerator@4
  displayName: 'Create one report for all the repository'
  inputs:
    reports: '$(Build.SourcesDirectory)/coverage/**/cobertura-coverage.xml'
    targetdir: 'coveragereport'
    reporttypes: 'HtmlInline_AzurePipelines_Dark;Cobertura;Badges'

- task: PublishCodeCoverageResults@2
  displayName: 'Publish code coverage results to Azure DevOps'
  inputs:
    #codeCoverageTool: Cobertura
    summaryFileLocation: '$(Build.SourcesDirectory)/coveragereport/Cobertura.xml'
    #reportDirectory: '$(Build.SourcesDirectory)/coveragereport'